{"version":3,"file":"static/js/904.92f0f6dc.chunk.js","mappings":"iOA0HA,UA9GqB,WAAO,IAAD,EACzB,GAAwBA,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACRE,QAAQC,IAAI,SAAUH,GAEtB,IAAMI,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MACjBL,QAAQC,IAAI,WAAYG,GACxB,IAAME,GAAO,UAAAF,EAASG,aAAT,eAAgBD,OAAQ,IACrCN,QAAQC,IAAI,OAAQK,IAEpBE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,WAAMC,GAAN,yFACKC,EAAAA,EAAAA,IAAA,6CACiBD,EADjB,6DADL,uBACVE,EADU,EACVA,KAGRZ,QAAQC,IAAI,OAAQW,GAJF,kBAKXA,GALW,2CAAH,sDAQXC,EAAS,mCAAG,+GAEOJ,EAAYX,GAFnB,OAERgB,EAFQ,OAGdjB,EAAQiB,GACRd,QAAQC,IAAI,SAAUa,GAJR,gDAKLC,EALK,KAKLA,SACTf,QAAQC,IAAIc,EAASH,KAAKI,SANZ,yDAAH,qDASfH,GACD,GAAE,CAACf,IAMJ,OACE,iBACEmB,MAAO,CACLC,QAAS,OAFb,WAKE,mBAAQC,QARG,kBAAMjB,EAASI,EAAf,EAQcW,MAAO,CAAEG,OAAQ,mBAA1C,sBAGA,iBACEH,MAAO,CACLI,QAAS,OACTC,IAAK,QAHT,WAME,gBACEL,MAAO,CAELI,QAAS,OAGTE,UAAW,OACXC,UAAW,SACXC,WAAY,SACZC,eAAgB,SAChBN,OAAQ,OAVZ,UAaE,gBAAKO,IAAG,iDAAqC/B,QAArC,IAAqCA,OAArC,EAAqCA,EAAMgC,aAAeC,IAAG,OAAEjC,QAAF,IAAEA,OAAF,EAAEA,EAAMkC,WAG/E,4BACE,iCACGlC,QADH,IACGA,OADH,EACGA,EAAMkC,MADT,YACkBlC,QADlB,IACkBA,OADlB,EACkBA,EAAMmC,aAAaC,MAAM,EAAG,GAD9C,QAGA,wCAAgBC,KAAKC,MAA2B,IAAjB,OAAJtC,QAAI,IAAJA,OAAA,EAAAA,EAAMuC,eAAjC,QACA,sCACA,8BAAIvC,QAAJ,IAAIA,OAAJ,EAAIA,EAAMwC,YACV,oCACA,eACEnB,MAAO,CACLI,QAAS,OACTC,IAAK,OACLe,UAAW,OACXnB,QAAS,OALb,gBAQGtB,QARH,IAQGA,OARH,EAQGA,EAAM0C,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,KAAM1C,EAAT,EAASA,GAAT,OAChB,wBAAc0C,GAAL1C,EADO,aAOxB,mBACA,mDACA,2BACE,yBACE,SAAC,KAAD,CAAM2C,GAAG,OAAOlC,MAAO,CAAED,KAAAA,GAAzB,qBAIF,yBACE,SAAC,KAAD,CAAMmC,GAAG,UAAUlC,MAAO,CAAED,KAAAA,GAA5B,2BAKJ,mBACA,SAAC,KAAD,MAGL,C","sources":["components/pages/MovieDetailsPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n// import { useCallback } from 'react';\nimport {\n  Link,\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\n\nimport axios from 'axios';\n\nconst MovieDetails = () => {\n  const [film, setFilm] = useState();\n  const { id } = useParams();\n  console.log('SMP-> ', id);\n\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  console.log('location', location);\n  const from = location.state?.from || '/';\n  console.log('from', from);\n\n  useEffect(() => {\n    const getFilmById = async filmId => {\n      const { data } = await axios.get(\n        `https://api.themoviedb.org/3/movie/${filmId}?api_key=9ec6001a7af70e1d00b5565b52b6b615&language=en-US`\n      );\n      console.log('data', data);\n      return data;\n    };\n\n    const fetchFilm = async () => {\n      try {\n        const result = await getFilmById(id);\n        setFilm(result);\n        console.log('result', result);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n    fetchFilm();\n  }, [id]);\n\n  // const goBack = useCallback(() => navigate(-1), [navigate]);\n  // const goBack = useCallback(() => navigate(from), [navigate]);\n  const goBack = () => navigate(from);\n\n  return (\n    <div\n      style={{\n        padding: '2px',\n      }}\n    >\n      <button onClick={goBack} style={{ margin: '5px 0px 0px 0px' }}>\n        Go back\n      </button>\n      <div\n        style={{\n          display: 'flex',\n          gap: '20px',\n        }}\n      >\n        <div\n          style={{\n            // backgroundColor: '#d6ccc2',\n            display: 'flex',\n            // width: '200px',\n            // height: '300px',\n            marginTop: '10px',\n            textAlign: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            margin: '0px',\n          }}\n        >\n          <img src={`https://image.tmdb.org/t/p/w300/${film?.poster_path}`} alt={film?.title} />\n        </div>\n\n        <div>\n          <h1>\n            {film?.title} ({film?.release_date.slice(0, 4)})\n          </h1>\n          <p>User Score: {Math.round(film?.vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          <p>{film?.overview}</p>\n          <h2>Genres</h2>\n          <ul\n            style={{\n              display: 'flex',\n              gap: '10px',\n              listStyle: 'none',\n              padding: '0px',\n            }}\n          >\n            {film?.genres.map(({ name, id }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <hr />\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <hr />\n      <Outlet />\n    </div>\n  );\n};\nexport default MovieDetails;\n\n////.getFullYear()\n"],"names":["useState","film","setFilm","id","useParams","console","log","navigate","useNavigate","location","useLocation","from","state","useEffect","getFilmById","filmId","axios","data","fetchFilm","result","response","message","style","padding","onClick","margin","display","gap","marginTop","textAlign","alignItems","justifyContent","src","poster_path","alt","title","release_date","slice","Math","round","vote_average","overview","listStyle","genres","map","name","to"],"sourceRoot":""}