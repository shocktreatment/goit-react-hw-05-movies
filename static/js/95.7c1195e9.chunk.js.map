{"version":3,"file":"static/js/95.7c1195e9.chunk.js","mappings":"2OACA,EAAuB,wBAAvB,EAAuD,yB,SCGjDA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAQA,OACE,+BACE,kBAAMH,SARW,SAAAI,GACnBA,EAAEC,iBACFL,EAAS,CAAEE,MAAAA,IACXC,EAAS,GACV,EAIiCG,UAAWC,EAAzC,WACE,kBACEC,KAAK,OACLC,SAAU,SAAAL,GAAC,OAAID,EAASC,EAAEM,OAAOC,MAAtB,EACXA,MAAOT,EACPI,UAAWC,KAEb,mBAAQC,KAAK,SAAb,wBAIP,E,iBC8BD,EAlDmB,WAEjB,OAA4BP,EAAAA,EAAAA,UAAS,IAArC,eAAOW,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEML,EAAQI,EAAaE,IAAI,SAC/BC,QAAQC,IAAI,SAAUR,GAEtB,IAAMS,EAAQ,mCAAG,WAAMT,GAAN,yFACQU,EAAAA,EAAAA,IAAA,kHACsFV,EADtF,gCADR,uBACPW,EADO,EACPA,KAGRJ,QAAQC,IAAIG,EAAKC,SAJF,kBAKRD,GALQ,2CAAH,uDAOdE,EAAAA,EAAAA,YAAU,WACR,GAAIb,EAAO,CACT,IAAMc,EAAM,mCAAG,+GAEQL,EAAST,GAFjB,OAELW,EAFK,OAGXT,EAAUS,EAAKC,SAHJ,gDAIFG,EAJE,KAIFA,SACTR,QAAQC,IAAIO,EAASJ,KAAKK,SALf,yDAAH,qDAQZF,GACD,CACF,GAAE,CAACd,IAEJ,IAKMiB,GAAWC,EAAAA,EAAAA,MAEXC,EAAWlB,EAAOmB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OAC1B,SAAC,KAAD,CAAeC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAAnD,UACE,wBAAKI,KADIC,EADe,IAM5B,OACE,iCAEE,SAAClC,EAAD,CAAWC,SAhBI,SAAC,GAAe,IAAbE,EAAY,EAAZA,MAGpBc,EAAgB,CAAEd,MAAAA,GACnB,KAaG,wBAAK4B,MAGV,C","sources":["webpack://react-homework-template/./src/components/modules/SearchBar/searchbar.module.css?7cf3","components/modules/SearchBar/SearchBar.jsx","components/pages/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"searchbar_form__H-lBD\",\"input\":\"searchbar_input__30+sb\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './searchbar.module.css';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ query });\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.form}>\n        <input\n          type=\"text\"\n          onChange={e => setQuery(e.target.value)}\n          value={query}\n          className={s.input}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\nexport { SearchBar };\n  \n  \nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { SearchBar } from '../modules/SearchBar/SearchBar';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  //   const [value, setValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const value = searchParams.get('query');\n  console.log('query=', value);\n\n  const getMovie = async value => {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=9ec6001a7af70e1d00b5565b52b6b615&language=en-US&query=${value}&page=1&include_adult=false`\n    );\n    console.log(data.results);\n    return data;\n  };\n  useEffect(() => {\n    if (value) {\n      const fetchM = async () => {\n        try {\n          const data = await getMovie(value);\n          setMovies(data.results);\n        } catch ({ response }) {\n          console.log(response.data.message);\n        }\n      };\n      fetchM();\n    }\n  }, [value]);\n\n  const searchPost = ({ query }) => {\n    //   setValue(search);\n\n    setSearchParams({ query });\n  };\n  const location = useLocation();\n\n  const elements = movies.map(({ title, id }) => (\n    <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n      <li>{title}</li>\n    </Link>\n  ));\n\n  return (\n    <>\n      {/* <h1>MOVIES</h1> */}\n      <SearchBar onSubmit={searchPost} />\n      <ul>{elements}</ul>\n    </>\n  );\n};\nexport default MoviesPage;\n"],"names":["SearchBar","onSubmit","useState","query","setQuery","e","preventDefault","className","s","type","onChange","target","value","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","console","log","getMovie","axios","data","results","useEffect","fetchM","response","message","location","useLocation","elements","map","title","id","to","state","from"],"sourceRoot":""}